"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(dashboard)/dashboard/page",{

/***/ "(app-pages-browser)/./stores/authStore.ts":
/*!*****************************!*\
  !*** ./stores/authStore.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAuthActions: function() { return /* binding */ useAuthActions; },\n/* harmony export */   useAuthLoading: function() { return /* binding */ useAuthLoading; },\n/* harmony export */   useAuthState: function() { return /* binding */ useAuthState; },\n/* harmony export */   useAuthStore: function() { return /* binding */ useAuthStore; },\n/* harmony export */   useIsAuthenticated: function() { return /* binding */ useIsAuthenticated; },\n/* harmony export */   useUser: function() { return /* binding */ useUser; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand/middleware */ \"(app-pages-browser)/./node_modules/zustand/esm/middleware.mjs\");\n\n\n\n// Datos mock para desarrollo\nconst mockUsers = [\n    {\n        id: \"1\",\n        email: \"student@gmail.com\",\n        name: \"Estudiante Demo\",\n        role: \"STUDENT\",\n        password: \"123456\"\n    },\n    {\n        id: \"2\",\n        email: \"teacher@kaledacademy.com\",\n        name: \"Profesor Demo\",\n        role: \"TEACHER\",\n        password: \"123456\"\n    },\n    {\n        id: \"3\",\n        email: \"admin@kaledacademy.com\",\n        name: \"Administrador Demo\",\n        role: \"ADMIN\",\n        password: \"123456\"\n    }\n];\nconst useAuthStore = (0,zustand__WEBPACK_IMPORTED_MODULE_0__.create)()((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_1__.subscribeWithSelector)((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_1__.devtools)((set, get)=>({\n        // Estado inicial\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        signIn: async (email, password)=>{\n            console.log(\"AuthStore: signIn called with:\", {\n                email,\n                password\n            });\n            set({\n                isLoading: true\n            });\n            try {\n                // Simular delay de red\n                await new Promise((resolve)=>setTimeout(resolve, 1000));\n                // Buscar usuario en datos mock\n                const user = mockUsers.find((u)=>u.email === email && u.password === password);\n                console.log(\"AuthStore: found user:\", user);\n                if (user) {\n                    const { password: _, ...userWithoutPassword } = user;\n                    set({\n                        user: userWithoutPassword,\n                        isAuthenticated: true,\n                        isLoading: false\n                    });\n                    console.log(\"AuthStore: login successful\");\n                    return {\n                        success: true\n                    };\n                } else {\n                    set({\n                        isLoading: false\n                    });\n                    console.log(\"AuthStore: login failed - invalid credentials\");\n                    return {\n                        success: false,\n                        error: \"Credenciales inv\\xe1lidas. Usa los usuarios de prueba.\"\n                    };\n                }\n            } catch (error) {\n                console.error(\"AuthStore: login error:\", error);\n                set({\n                    isLoading: false\n                });\n                return {\n                    success: false,\n                    error: \"Error de conexi\\xf3n\"\n                };\n            }\n        },\n        signOut: ()=>{\n            set({\n                user: null,\n                isAuthenticated: false,\n                isLoading: false\n            });\n        },\n        signUp: async (email, password, name)=>{\n            set({\n                isLoading: true\n            });\n            try {\n                // Simular delay de red\n                await new Promise((resolve)=>setTimeout(resolve, 1000));\n                // Verificar si el usuario ya existe\n                const existingUser = mockUsers.find((u)=>u.email === email);\n                if (existingUser) {\n                    set({\n                        isLoading: false\n                    });\n                    return {\n                        success: false,\n                        error: \"El usuario ya existe\"\n                    };\n                }\n                // Crear nuevo usuario (en un caso real, esto iría a la base de datos)\n                const newUser = {\n                    id: Date.now().toString(),\n                    email,\n                    name,\n                    role: \"STUDENT\"\n                };\n                set({\n                    user: newUser,\n                    isAuthenticated: true,\n                    isLoading: false\n                });\n                return {\n                    success: true\n                };\n            } catch (error) {\n                set({\n                    isLoading: false\n                });\n                return {\n                    success: false,\n                    error: \"Error al crear la cuenta\"\n                };\n            }\n        },\n        checkAuth: async ()=>{\n            set({\n                isLoading: true\n            });\n            try {\n                // En un caso real, aquí verificarías el token con Supabase\n                // Por ahora, solo simulamos un delay\n                await new Promise((resolve)=>setTimeout(resolve, 500));\n                // Si hay un usuario en el estado, lo mantenemos\n                const { user } = get();\n                if (user) {\n                    set({\n                        isAuthenticated: true,\n                        isLoading: false\n                    });\n                } else {\n                    set({\n                        isAuthenticated: false,\n                        isLoading: false\n                    });\n                }\n            } catch (error) {\n                set({\n                    isAuthenticated: false,\n                    isLoading: false\n                });\n            }\n        }\n    }), {\n    name: \"auth-store\",\n    enabled: \"development\" === \"development\"\n})));\n// Selectores optimizados para evitar re-renders innecesarios\nconst useAuthState = ()=>useAuthStore((state)=>({\n            user: state.user,\n            isAuthenticated: state.isAuthenticated,\n            isLoading: state.isLoading\n        }));\nconst useAuthActions = ()=>useAuthStore((state)=>({\n            signIn: state.signIn,\n            signOut: state.signOut,\n            signUp: state.signUp,\n            checkAuth: state.checkAuth\n        }));\nconst useUser = ()=>useAuthStore((state)=>state.user);\nconst useIsAuthenticated = ()=>useAuthStore((state)=>state.isAuthenticated);\nconst useAuthLoading = ()=>useAuthStore((state)=>state.isLoading);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./stores/authStore.ts\n"));

/***/ })

});